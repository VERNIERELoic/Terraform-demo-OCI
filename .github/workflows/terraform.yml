name: Terraform plan

on:
  push:
    branches:
      - main
      - dev

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13.0

      - name: Set OCI key
        run: |
          echo "${{ secrets.OCI_PRIVATE_KEY }}" > ./oci_api_key.pem
          chmod 600 ./oci_api_key.pem
          
      - name: Terraform Init & Plan
        run: |
          export TF_VAR_tenancy_ocid="${{ secrets.TF_VAR_TENANCY_OCID }}"
          export TF_VAR_user_ocid="${{ secrets.TF_VAR_USER_OCID }}"
          export TF_VAR_fingerprint="${{ secrets.TF_VAR_FINGERPRINT }}"
          export TF_VAR_region="${{ secrets.TF_VAR_REGION }}"
          export TF_VAR_private_key_path="./oci_api_key.pem"
          source ~/.bash_profile

          terraform init

          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Branch detected: $BRANCH_NAME"

          if [ "$BRANCH_NAME" = "dev" ]; then
            VAR_FILE="envs/dev/dev.tfvars"
          elif [ "$BRANCH_NAME" = "staging" ]; then
            VAR_FILE="envs/staging/staging.tfvars"
          else
            VAR_FILE="envs/prod/prod.tfvars"
          fi

          echo "VAR_FILE=$VAR_FILE" >> $GITHUB_ENV
          terraform plan -var-file="$VAR_FILE" -out=tfplan -detailed-exitcode 
          if [ $? -eq 2 ]; then
            terraform apply -auto-approve tfplan
          else
            exit 1

      - name: Remove OCI key
        run: rm -f ./oci_api_key.pem
